{"version":3,"file":"main.js","mappings":"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","sources":["webpack://penny-task/./apps/api/config.ts","webpack://penny-task/./apps/api/src/app.module.ts","webpack://penny-task/./apps/api/src/auth/auth.controller.ts","webpack://penny-task/./apps/api/src/auth/auth.module.ts","webpack://penny-task/./apps/api/src/auth/auth.service.ts","webpack://penny-task/./apps/api/src/auth/jwt.strategy.ts","webpack://penny-task/./apps/api/src/auth/local.strategy.ts","webpack://penny-task/./apps/api/src/entities/abstract-entity.ts","webpack://penny-task/./apps/api/src/entities/user.entity.ts","webpack://penny-task/./apps/api/src/section/errors.filter.ts","webpack://penny-task/./apps/api/src/section/validation.pipe.ts","webpack://penny-task/./apps/api/src/user/user.dto.ts","webpack://penny-task/./apps/api/src/user/user.module.ts","webpack://penny-task/./apps/api/src/user/user.service.ts","webpack://penny-task/external commonjs \"@nestjs/common\"","webpack://penny-task/external commonjs \"@nestjs/config\"","webpack://penny-task/external commonjs \"@nestjs/core\"","webpack://penny-task/external commonjs \"@nestjs/jwt\"","webpack://penny-task/external commonjs \"@nestjs/passport\"","webpack://penny-task/external commonjs \"@nestjs/swagger\"","webpack://penny-task/external commonjs \"@nestjs/typeorm\"","webpack://penny-task/external commonjs \"bcrypt\"","webpack://penny-task/external commonjs \"class-transformer\"","webpack://penny-task/external commonjs \"class-validator\"","webpack://penny-task/external commonjs \"lodash\"","webpack://penny-task/external commonjs \"passport-jwt\"","webpack://penny-task/external commonjs \"passport-local\"","webpack://penny-task/external commonjs \"tslib\"","webpack://penny-task/external commonjs \"typeorm\"","webpack://penny-task/webpack/bootstrap","webpack://penny-task/./apps/api/src/main.ts"],"sourcesContent":["export const JWT_SECRET = process.env.JWT_SECRET ?? 'secret'","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => {\n        const isProduction = configService.get('STAGE') === 'prod';\n\n        return {\n          ssl: isProduction,\n          extra: {\n            ssl: isProduction ? { rejectUnauthorized: false } : null,\n          },\n          type: 'mongodb',\n          autoLoadEntities: true,\n          synchronize: true,\n          host: configService.get('DB_HOST'),\n          port: configService.get('DB_PORT'),\n          username: configService.get('DB_USERNAME'),\n          password: configService.get('DB_PASSWORD'),\n          database: configService.get('DB_DATABASE'),\n        };\n      },\n    }),\n    UserModule,\n    AuthModule,\n  ],\n})\nexport class AppModule {}\n","import { UserDto } from './../user/user.dto';\r\nimport {\r\n  Body,\r\n  Controller,\r\n  Get,\r\n  Post,\r\n  UseGuards,\r\n  Res,\r\n  Request,\r\n  UnauthorizedException,\r\n} from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { AuthService } from './auth.service';\r\nimport { JwtService } from '@nestjs/jwt';\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n  constructor(\r\n    private readonly authService: AuthService,\r\n    private readonly jwtService: JwtService\r\n  ) {}\r\n\r\n  @UseGuards(AuthGuard('jwt'))\r\n  @Get('users')\r\n  async findAll(@Request() req): Promise<any[]> {\r\n    try {\r\n      const { authorization } = req.headers;\r\n\r\n      const token = authorization.replace('Bearer ', '');\r\n      const userInfo = this.jwtService.decode(token);\r\n      if (\r\n        new Date().getTime() - new Date(userInfo['signDate']).getTime() >=\r\n        1000 * 60 * 60 * 8\r\n      ) {\r\n        throw new UnauthorizedException('expired token');\r\n      }\r\n    } catch (err) {}\r\n\r\n    return await this.authService.findAll();\r\n  }\r\n\r\n  @Post('signUp')\r\n  async register(@Body() req: UserDto, @Res() res) {\r\n    const result = await this.authService.register(req);\r\n    res.status(result.statusCode).send(result);\r\n  }\r\n\r\n  @UseGuards(AuthGuard('local'))\r\n  @Post('signIn')\r\n  async login(@Body() @Request() req: UserDto, @Res() res) {\r\n    const result = await this.authService.login(req);\r\n    res.status(result.statusCode).send(result);\r\n  }\r\n}\r\n","import { AuthController } from './auth.controller';\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UserModule } from '../user/user.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JWT_SECRET } from '../../config';\n\n@Module({\n  imports: [\n    PassportModule,\n    JwtModule.register({\n      secret: JWT_SECRET,\n      signOptions: { expiresIn: '7200s' },\n    }),\n    UserModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n","import { Injectable, BadRequestException } from '@nestjs/common';\r\nimport { UserService } from '../user/user.service';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport * as bcrypt from 'bcrypt';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    private readonly userService: UserService,\r\n    private readonly jwtService: JwtService\r\n  ) {}\r\n\r\n  async findAll(): Promise<any[]> {\r\n    return await this.userService.findAll();\r\n  }\r\n\r\n  async findOne(username: string): Promise<any> {\r\n    return await this.userService.findUsername(username);\r\n  }\r\n\r\n  async validateUser(username: string, pass: string): Promise<any> {\r\n    const user = await this.userService.findUsername(username);\r\n    if (user && bcrypt.compareSync(pass, user.password)) {\r\n      return user;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async register(user: any) {\r\n    let userData: any;\r\n    userData = await this.userService.findUsername(user.username);\r\n    if (userData) {\r\n      throw new BadRequestException('This username aleady exists');\r\n    }\r\n\r\n    await this.userService.createUser(user).catch((e) => console.log(e));\r\n\r\n    userData = await this.userService.findUsername(user.username);\r\n\r\n    const Token = this.createToken(userData);\r\n\r\n    return {\r\n      username: userData.username,\r\n      access_token: Token,\r\n      statusCode: 201,\r\n    };\r\n  }\r\n\r\n  async login(user: any) {\r\n    return this.userService.findUsername(user.username).then((userData) => {\r\n      if (!userData) {\r\n        throw new BadRequestException('Check username or password');\r\n      }\r\n      const Token = this.createToken(userData);\r\n      return {\r\n        id: userData.id,\r\n        username: userData.username,\r\n        access_token: Token,\r\n        statusCode: 200,\r\n      };\r\n    });\r\n  }\r\n\r\n  createToken(user: any) {\r\n    const payload = {\r\n      username: user.username,\r\n      sub: user.id,\r\n      signDate: new Date(),\r\n    };\r\n    return this.jwtService.sign(payload);\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { JWT_SECRET } from '../../config';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor() {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: JWT_SECRET,\r\n    });\r\n  }\r\n\r\n  async validate(payload: any) {\r\n    return { userId: payload.sub, username: payload.username };\r\n  }\r\n}\r\n","import {\r\n  ConflictException,\r\n  Injectable,\r\n  UnauthorizedException,\r\n} from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Strategy } from 'passport-local';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private readonly authService: AuthService) {\r\n    super();\r\n  }\r\n\r\n  async validate(username: string, password: string) {\r\n    const user = await this.authService.validateUser(username, password);\r\n    if (!user) {\r\n      throw new ConflictException('check your info');\r\n    }\r\n    return user;\r\n  }\r\n}\r\n","import {\r\n    BaseEntity,\r\n    PrimaryGeneratedColumn,\r\n    CreateDateColumn,\r\n    UpdateDateColumn,\r\n} from 'typeorm';\r\n\r\nexport abstract class AbstractEntity extends BaseEntity {\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @CreateDateColumn()\r\n    createdAt: Date;\r\n\r\n    @UpdateDateColumn()\r\n    updatedAt: Date;\r\n}","import { BeforeInsert, Column, Entity } from 'typeorm';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { AbstractEntity } from './abstract-entity';\r\n\r\n@Entity('user')\r\nexport class UserEntity extends AbstractEntity {\r\n  @Column()\r\n  username: string;\r\n\r\n  @Column()\r\n  password: string;\r\n\r\n  @BeforeInsert()\r\n  async hashPassword() {\r\n    this.password = await bcrypt.hashSync(this.password, 10);\r\n  }\r\n}\r\n","import {\r\n    Catch,\r\n    ArgumentsHost,\r\n    HttpException,\r\n    ExceptionFilter,\r\n    HttpStatus,\r\n} from '@nestjs/common'\r\n\r\n@Catch()\r\nexport class ExceptionsFilter implements ExceptionFilter {\r\n    async catch(exception, host: ArgumentsHost) {\r\n        const ctx = host.switchToHttp()\r\n        const response = ctx.getResponse()\r\n        const request = ctx.getRequest()\r\n\r\n        let message = exception.message\r\n        let isDeepestMessage = false\r\n        while (!isDeepestMessage) {\r\n            isDeepestMessage = !message.message\r\n            message = isDeepestMessage ? message : message.message\r\n        }\r\n\r\n        const errorResponse = {\r\n            message: message || 'Request failed',\r\n            status: 1,\r\n        }\r\n\r\n        const status = exception instanceof HttpException ?\r\n            exception.getStatus() :\r\n            HttpStatus.INTERNAL_SERVER_ERROR\r\n\r\n        response.status(status)\r\n        response.header('Content-Type', 'application/json; charset=utf-8')\r\n        response.send(errorResponse)\r\n    }\r\n}","import {\r\n    ArgumentMetadata,\r\n    BadRequestException,\r\n    Injectable,\r\n    PipeTransform,\r\n} from '@nestjs/common'\r\nimport { plainToClass } from 'class-transformer'\r\nimport { validate } from 'class-validator'\r\nimport * as _ from 'lodash'\r\n\r\n@Injectable()\r\nexport class ValidationPipe implements PipeTransform<any> {\r\n    async transform(value, metadata: ArgumentMetadata) {\r\n        const { metatype } = metadata\r\n        if (!metatype || !this.toValidate(metatype)) {\r\n            return value\r\n        }\r\n        const object = plainToClass(metatype, value)\r\n        const errors = await validate(object)\r\n        if (errors.length > 0) {\r\n            const errorMessage = _.values(errors[0].constraints)[0]\r\n            throw new BadRequestException(errorMessage)\r\n        }\r\n        return value\r\n    }\r\n\r\n    private toValidate(metatype): boolean {\r\n        const types = [String, Boolean, Number, Array, Object]\r\n        return !types.find(type => metatype === type)\r\n    }\r\n}\r\n","import { IsString } from 'class-validator'\r\nimport { ApiProperty } from '@nestjs/swagger';\r\n\r\nexport class UserDto {\r\n\r\n    @ApiProperty()\r\n    @IsString()\r\n    readonly username: string;\r\n\r\n    @ApiProperty()\r\n    @IsString()\r\n    readonly password: string;\r\n}\r\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserService } from './user.service';\nimport { UserEntity } from '../entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity])],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { UserDto } from './user.dto';\r\nimport { UserEntity } from '../entities/user.entity';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(\r\n    @InjectRepository(UserEntity)\r\n    private readonly userRepository: Repository<UserEntity>\r\n  ) {}\r\n\r\n  async createUser(userDto: UserDto) {\r\n    const user = this.userRepository.create(userDto);\r\n    return await this.userRepository.save(user);\r\n  }\r\n\r\n  async findUsername(username: string) {\r\n    return this.userRepository.findOne({ where: { username } });\r\n  }\r\n\r\n  async findAll(): Promise<any[]> {\r\n    return await this.userRepository.find();\r\n  }\r\n}\r\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"bcrypt\");","module.exports = require(\"class-transformer\");","module.exports = require(\"class-validator\");","module.exports = require(\"lodash\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { NestFactory } from '@nestjs/core';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\nimport { AppModule } from './app.module';\nimport { ExceptionsFilter } from './section/errors.filter';\nimport { ValidationPipe } from './section/validation.pipe';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  const options = new DocumentBuilder()\n    .setTitle('NestJS-Example')\n    .setDescription('The NestJS API description')\n    .setVersion('0.0.1')\n    .addBearerAuth()\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup('docs', app, document);\n\n  app.useGlobalFilters(new ExceptionsFilter());\n  app.useGlobalPipes(new ValidationPipe());\n  app.enableCors();\n  await app.listen(3000);\n}\nbootstrap();\n"],"names":[],"sourceRoot":""}